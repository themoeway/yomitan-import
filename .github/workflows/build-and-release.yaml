name: Build and Release

on: push

jobs:
  build-publish:
    strategy:
      matrix:
        go-version: [1.21.0] # Specify the Go version you want to use
        os: [ubuntu-latest, windows-latest ] # Specify the target platforms here
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Install Linux Packages
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libgtk-3-dev -y

      - name: Install MinGW (Windows)
        if: matrix.os == 'windows-latest'
        uses: egor-tensin/setup-mingw@v2.2.0
      

      - name: Build Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          # Create build directory
          build_dir="yomitan-import_${{ matrix.os }}"
          mkdir -p "$build_dir"

          # Compile the Go project for the current platform
          go build -o "$build_dir" ./yomitan
          go build -o "$build_dir" ./yomitan-gtk

          # Zip the build directory
          zip -r "$build_dir.zip" "$build_dir"

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: |
          # Create build directory
          $build_dir="yomitan-import_${{ matrix.os }}"
          mkdir -p "$build_dir"

          # Compile the Go project for the current platform
          go build -o "$build_dir" ./yomitan
          go build -ldflags="-H windowsgui" -o "$build_dir" ./yomitan-gtk

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v3
        with:
          path: yomitan-import_${{ matrix.os }}.zip
          name: yomitan-import_${{ matrix.os }}

      - name: Release on Tag Creation
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            yomitan-import_${{ matrix.os }}.zip
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
